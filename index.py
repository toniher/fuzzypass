from fuzzypass import *
import argparse
import sys

def main(args):


	qseq = "MPSDEPSQQPAA--RRSRGVRAFFRRMRKRLT-GGGEPPRPPETAASAAASAAAVDLVDQAEAFQSLRVADVMTPRADIVAVELSTPFEAVAAQFAEAEHSRMPIYRETLDDPVGVIHVKDVFRLLADEAKRPAPSDLILNKLRRDALYVPASMKAADLLLRMRTSRIHMALVIDEFGGTDGLVSMEDLIEAVVGEIDDEHDDATAVAVVARPGGIFDADARAPLEELEAALSHDLAPPDMDEDIDTVAGLVVALAGRVPQRGEVIAHPDGFEFEVVEADPRRVRRVRVRGGPSQPAEPALDGAQPDI"

	hseq = "MPSDEPSQQPAAPARRSRGVRAFLRRMRKRLTVGGGESPRPPEPPAQTGE----VDLVDQAEAFQTLRVADVMTPRADIIAVELSTPFEALVAQFVEAGHSRMPIYRETLDDPVGVVHVKDVFKLLAEDVRRPTSADLVLNKLRREALYVPASMKAADLLLRMRTSRIHMALVIDEFGGTDGVVTMEDLIEAVVGEIDDEHDDAAAVAIVARPGGVYDADARAPLEELEAALGRELAPADMEEDIDTVAGLVVALAGRVPQRGEVIAHPDGYEFEVVEADPRRVRRVRVRGGPA-PRPEALESVSEDL"

	#qseq = "MPSDEPSQQPAARRSRGVRAFFRRMRKRLTGGGEPPRPPETAASAAASAAAVDLVDQAEAFQSLRVADVMTPRADIVAVELSTPFEAVAAQFAEAEHSRMPIYRETLDDPVGVIHVKDVFRLLADEAKRPAPSDLILNKLRRDALYVPASMKAADLLLRMRTSRIHMALVIDEFGGTDGLVSMEDLIEAVVGEIDDEHDDATAVAVVARPGGIFDADARAPLEELEAALSHDLAPPDMDEDIDTVAGLVVALAGRVPQRGEVIAHPDGFEFEVVEADPRRVRRVRVRGGPSQPAEPALDGAQPDIERS"
	#hseq = "MPSDEPSQQPAARRSRGVRAFFRRMRKRLTGGGEPPRPPETAASAAASAAAVDLVDQAEAFQSLRVADVMTPRADIVAVELSTPFEAVAAQFAEAEHSRMPIYRETLDDPVGVIHVKDVFRLLADEAKRPAPSDLILNKLRRDALYVPASMKAADLLLRMRTSRIHMALVIDEFGGTDGLVSMEDLIEAVVGEIDDEHDDATAVAVVARPGGIFDADARAPLEELEAALSHDLAPPDMDEDIDTVAGLVVALAGRVPQRGEVIAHPDGFEFEVVEADPRRVRRVRVRGGPSQPAEPALDGAQPDIERS"

	#qseq = "MPSDEPSQQPA--ARRSRGVRAFFRRMRKRLTGGGEPPRPPETAASAAASAAAVDLVDQAEAFQSLRVADVMTPRADIVAVELSTPFEAVAAQFAEAEHSRMPIYRETLDDPVGVIHVKDVFRLLADEAKRPAPSDLILNKLRRDALYVPASMKAADLLLRMRTSRIHMALVIDEFGGTDGLVSMEDLIEAVVGEIDDEHDDATAVAVVARPGGIFDADARAPLEELEAALSHDLAPPDMDEDIDTVAGLVVALAGRVPQRGEVIAHPDGFEFEVVEADP"
	#hseq = "MPSDDQSSAPAGPARLSRGVRAFFRKMRKDLAGRGVPGLAETSRPADPTLVHEVDMVDQAEAFQSLRVADVMTPRADIVAVEASSPFEAVVAQFTEAEHSRMPIYRETLDDPVGVIHVKDVFRLLADEEKRPTPSDQVLHRLRREALYVPASMRAADLLLRMRTSRIHMALVIDEFGGTDGLVTMEDLIEAVVGEIDDEHDDAQVSSIVARPGGVFEADARAPLEDLEAALDRDLAPPDMEEDIDTVAGLVVALAGRVPQRGEVIAHPAGFDLEVVEADP"

	parser = inputparser.InputParser( args[1] )
	parser.read()
	
	fuzzout = fuzzifier.FuzzyFier( {} )
	fuzzout.calculate( parser.list_seqs )
	
	pearson = metrics.DistPearson( qseq, hseq )
	pearson.calculate()
	KDF = metrics.KDF( qseq, hseq )
	KDF.calculate()
	print( pearson.distance )
	print( pearson.rcoeff )
	print( "KD" )
	print( KDF.KD )
	print( "Flx" )
	print( KDF.Flx )

if __name__== "__main__":
	main(sys.argv)



